def print_board(board):
    print(f"\n{board[0]} | {board[1]} | {board[2]}")
    print("--+---+--")
    print(f"{board[3]} | {board[4]} | {board[5]}")
    print("--+---+--")
    print(f"{board[6]} | {board[7]} | {board[8]}\n")

def check_winner(board, player):
    win_conditions = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
        [0, 4, 8], [2, 4, 6]               # Diagonals
    ]
    for condition in win_conditions:
        if all(board[i] == player for i in condition):
            return True
    return False

def is_full(board):
    return all(space != ' ' for space in board)

def main():
    board = [' '] * 9
    current_player = 'X'
    game_over = False

    print("Welcome to Tic-Tac-Toe!")
    print_board(board)

    while not game_over:
        try:
            move = int(input(f"Player {current_player}, enter your move (1-9): ")) - 1
            if board[move] != ' ':
                print("Invalid move. The cell is already occupied.")
                continue
            board[move] = current_player
            print_board(board)

            if check_winner(board, current_player):
                print(f"Player {current_player} wins!")
                game_over = True
            elif is_full(board):
                print("The game is a tie!")
                game_over = True
            else:
                current_player = 'O' if current_player == 'X' else 'X'

        except (IndexError, ValueError):
            print("Invalid input. Please enter a number between 1 and 9.")

    print("Game Over!")

if __name__ == "__main__":
    main()
